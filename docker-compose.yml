version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: ai-agents-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-ai_agents}
      MYSQL_USER: ${MYSQL_USER:-aiuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-aipassword}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - ai-agents-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # 后端API服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-agents-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    volumes:
      - ./backend/config.yaml:/root/config.yaml:ro
      - ./logs:/root/logs
    depends_on:
      - mysql
    networks:
      - ai-agents-network
    environment:
      - TZ=Asia/Shanghai

  # 前端服务（使用Nginx）
  frontend:
    image: nginx:alpine
    container_name: ai-agents-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - ai-agents-network

volumes:
  mysql_data:
    driver: local

networks:
  ai-agents-network:
    driver: bridge